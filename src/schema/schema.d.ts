/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/users": {
    /**
     * Get a list of users
     * @description Retrieve a list of user entities.
     */
    get: {
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["UserDTO"][];
          };
        };
        /** @description Internal Server Error */
        500: {
          content: {
            "application/json": external["openapi.specification.json"];
          };
        };
      };
    };
    /**
     * Resource to create a user
     * @description Create a user
     */
    post: {
      /** @description User to add to the system */
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserInput"];
        };
      };
      responses: {
        /** @description Successful response */
        201: {
          content: {
            "application/json": components["schemas"]["UserDTO"];
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Resource to retrieve a single user */
    get: {
      parameters: {
        path: {
          /** @description User identification string */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        200: {
          content: {
            "application/json": components["schemas"]["UserDTO"];
          };
        };
      };
    };
    /** Resource to update user */
    put: {
      parameters: {
        path: {
          /** @description User identification string */
          id: string;
        };
      };
      /** @description User to update io the system */
      requestBody: {
        content: {
          "application/json": components["schemas"]["UserDTO"];
        };
      };
      responses: {
        /** @description Successful response */
        201: {
          content: {
            "application/json": components["schemas"]["UserDTO"];
          };
        };
      };
    };
    /** Resource to delete a user */
    delete: {
      parameters: {
        path: {
          /** @description User identification string */
          id: string;
        };
      };
      responses: {
        /** @description Successful response */
        204: {
          content: never;
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    UserDTO: {
      /** @default johndoe@gmail.com */
      email: string;
      /** @default john */
      firstName: string;
      /** @default Doe */
      lastName: string;
      /** @default false */
      isFirstTimeSignin?: boolean;
    };
    UserInput: {
      /** @default johndoe@gmail.com */
      email: string;
      /** @default securePassword123 */
      password: string;
      /** @default john */
      firstName: string;
      /** @default Doe */
      lastName: string;
    };
    Error: {
      message?: string;
    };
    error: {
      /** @default 123 */
      status?: number;
      /** @default Something went wrong */
      message?: string;
      error?: Record<string, never>;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export interface external {
  "openapi.specification.json": unknown;
}

export type operations = Record<string, never>;
